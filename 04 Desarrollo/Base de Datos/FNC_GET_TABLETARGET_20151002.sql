--  Generate SQL --  Version:                   	V5R4M0 060210 --  Generated on:              	02/10/15 20:02:22 --  Relational Database:       	B103BE2F --  Standards Option:          	DB2 UDB iSeries   SET PATH "QSYS","QSYS2","CARVALHORA" ; --DROP FUNCTION CARVALHORA.FNC_GET_TABLETARGET ;CREATE FUNCTION CARVALHORA.FNC_GET_TABLETARGET ( 	P_ID_LAYOUT INTEGER , 	P_TABLA_DESTINO VARCHAR(50) , 	P_QRY_TABLA_ORIGEN VARCHAR(2000) ) 	RETURNS VARCHAR(5000)   	LANGUAGE SQL 	SPECIFIC CARVALHORA.FNC_GET_TABLETARGET 	NOT DETERMINISTIC 	READS SQL DATA 	CALLED ON NULL INPUT 	DISALLOW PARALLEL 	SET OPTION  ALWBLK = *ALLREAD , 	ALWCPYDTA = *OPTIMIZE , 	COMMIT = *CHG , 	DECRESULT = (31, 31, 00) , 	DFTRDBCOL = *NONE , 	DYNDFTCOL = *NO , 	DYNUSRPRF = *USER , 	SRTSEQ = *HEX   	BEGIN ATOMIC 	 		DECLARE V_EOF INT DEFAULT 0 ; 		DECLARE V_CAM_ORIGEN VARCHAR ( 100 ) ; 		DECLARE V_CAM_DESTINO VARCHAR ( 100 ) ; 		DECLARE V_CAMPOS1 VARCHAR ( 1000 ) ; 		DECLARE V_CAMPOS2 VARCHAR ( 1000 ) ; 		DECLARE V_SQL VARCHAR ( 5000 ) ; 		DECLARE V_TIPO VARCHAR ( 50 ) ; 		DECLARE V_POSICION INT ; 		DECLARE V_ESCALA INT ;   		 -- Obtención de mapeo en tabla destino 		DECLARE C1 CURSOR FOR   			SELECT A . LMA_NCD AS CAM_DESTINO , 			( 'C' || VARCHAR ( B . LYC_CRE ) ) AS CAM_ORIGEN , 			C . TCA_NOM AS TIPO_CAMPO , 			A . LMA_POS AS POSICION , 			A . LMA_SCA AS ESCALA 			FROM ( CARVALHORA . CAT_LAMA A INNER JOIN 			CARVALHORA . CAT_LACA B ON A . LYC_CVE = B . LYC_CVE) INNER JOIN 			CARVALHORA . CAT_TICA C ON A . TCA_CVE = C . TCA_CVE 			WHERE A . LAY_CVE = P_ID_LAYOUT AND A . STA_CVE = 1 ;   		DECLARE CONTINUE HANDLER FOR NOT FOUND 			SET V_EOF = 1 ;   		OPEN C1 ;   		SET V_CAMPOS1 = '' ; 		SET V_CAMPOS2 = '' ;   		WHILE V_EOF = 0 DO   			FETCH FROM C1 INTO V_CAM_DESTINO , V_CAM_ORIGEN , V_TIPO , V_POSICION , V_ESCALA ;   			IF V_EOF = 0 THEN 			 				IF NOT V_CAMPOS1 = '' THEN 				 					SET V_CAMPOS1 = V_CAMPOS1 || ', ' ; 					SET V_CAMPOS2 = V_CAMPOS2 || ', ' ;   				END IF ;   				SET V_CAMPOS1 = V_CAMPOS1 || V_CAM_DESTINO ; 				SET V_CAMPOS2 = V_CAMPOS2 || VARCHAR ( FNC_GET_TIPODATO ( 'O . ' || V_CAM_ORIGEN , 								V_TIPO , 								CASE WHEN V_POSICION IS NULL THEN - 1 ELSE V_POSICION END , 								CASE WHEN V_ESCALA IS NULL THEN - 1 ELSE V_ESCALA END 								) ) 					|| ' AS ' || V_CAM_ORIGEN ;   			END IF ;   		END WHILE ;   		CLOSE C1 ;   		 -- Estructura query de inserción de datos en tabla destino 		SET V_SQL = 'INSERT INTO ' || P_TABLA_DESTINO || ' ( ' || V_CAMPOS1 || ' ) ' 		|| 'SELECT ' || V_CAMPOS2 || ' ' 		|| 'FROM ( ' || P_QRY_TABLA_ORIGEN || ' ) O ' ;   		RETURN V_SQL ; 			 	END  ;